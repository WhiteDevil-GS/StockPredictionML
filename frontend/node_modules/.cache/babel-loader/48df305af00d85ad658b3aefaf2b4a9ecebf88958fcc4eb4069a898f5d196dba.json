{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Downloads\\\\POME1\\\\POME1\\\\stockMarketPrediction\\\\frontend\\\\src\\\\components\\\\PredictStockPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport StockChart from \"./stockChart\";\nimport LoadingSpinner from \"./loadingAnimation\";\nimport notifyError from \"./Notifications\";\nimport { ToastContainer } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PredictStockPage = () => {\n  _s();\n  const [predictionData, setPredictionData] = useState([]);\n  const [passedStockData, setPassedStockData] = useState([]);\n  const location = useLocation();\n  const {\n    state: locationState\n  } = location;\n  const {\n    startDate,\n    endDate,\n    stockSymbol,\n    stockName\n  } = locationState || {};\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    if (locationState && locationState.stockData) {\n      setPassedStockData(locationState.stockData);\n    }\n  }, [locationState]);\n  const predictStockPrice = async (startDate, endDate, stockSymbol) => {\n    try {\n      setLoading(true);\n      const predictionResponse = await fetch(`http://localhost:3001/predictstock/${startDate}/${endDate}/${stockSymbol}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          stockSymbol: stockSymbol + \".NS\",\n          startDate: startDate,\n          endDate: endDate\n        })\n      });\n      if (!predictionResponse.ok) {\n        notifyError(\"Prediction failed due to some error.\");\n        return;\n      }\n      const preData = await predictionResponse.json();\n      setPredictionData(preData.predictionDataInJSON);\n    } catch (error) {\n      console.error(\"Error fetching stock data:\", error);\n      const errorMessage = error.message || \"An error occurred while fetching the stock data.\";\n      notifyError(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-semibold text-center mb-6 text-blue-700\",\n      children: \"Predict Stock Price for Next 30 Days\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center mb-6\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"text-white bg-gradient-to-r from-cyan-500 to-blue-500 hover:bg-gradient-to-bl focus:ring-4 focus:outline-none focus:ring-cyan-300 dark:focus:ring-cyan-800 font-medium rounded-lg text-lg px-6 py-3\",\n        onClick: () => predictStockPrice(startDate, endDate, stockSymbol),\n        children: \"Click to Predict\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [loading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this), !loading && passedStockData.length > 0 && predictionData.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-2xl font-semibold mb-4 text-blue-600\",\n          children: [\"Prediction Data for \", stockName, \" (\", stockSymbol, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(StockChart, {\n          stockData: passedStockData,\n          startDate: startDate,\n          endDate: endDate,\n          selectedStock: stockSymbol,\n          predictedData: predictionData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), !loading && predictionData.length === 0 && passedStockData.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg text-red-600 font-semibold\",\n        children: \"No prediction data available. Please try again later.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(PredictStockPage, \"5vM+K8z23+F37nuCo2Sa9jJssm8=\", false, function () {\n  return [useLocation];\n});\n_c = PredictStockPage;\nexport default PredictStockPage;\nvar _c;\n$RefreshReg$(_c, \"PredictStockPage\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","StockChart","LoadingSpinner","notifyError","ToastContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","PredictStockPage","_s","predictionData","setPredictionData","passedStockData","setPassedStockData","location","state","locationState","startDate","endDate","stockSymbol","stockName","loading","setLoading","stockData","predictStockPrice","predictionResponse","fetch","method","headers","body","JSON","stringify","ok","preData","json","predictionDataInJSON","error","console","errorMessage","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","selectedStock","predictedData","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Downloads/POME1/POME1/stockMarketPrediction/frontend/src/components/PredictStockPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport StockChart from \"./stockChart\";\r\nimport LoadingSpinner from \"./loadingAnimation\";\r\nimport notifyError from \"./Notifications\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\nconst PredictStockPage = () => {\r\n  const [predictionData, setPredictionData] = useState([]);\r\n  const [passedStockData, setPassedStockData] = useState([]);\r\n  const location = useLocation();\r\n  const { state: locationState } = location;\r\n  const { startDate, endDate, stockSymbol, stockName } = locationState || {};\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (locationState && locationState.stockData) {\r\n      setPassedStockData(locationState.stockData);\r\n    }\r\n  }, [locationState]);\r\n\r\n  const predictStockPrice = async (startDate, endDate, stockSymbol) => {\r\n    try {\r\n      setLoading(true);\r\n      const predictionResponse = await fetch(\r\n        `http://localhost:3001/predictstock/${startDate}/${endDate}/${stockSymbol}`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            stockSymbol: stockSymbol + \".NS\",\r\n            startDate: startDate,\r\n            endDate: endDate,\r\n          }),\r\n        }\r\n      );\r\n\r\n      if (!predictionResponse.ok) {\r\n        notifyError(\"Prediction failed due to some error.\");\r\n        return;\r\n      }\r\n\r\n      const preData = await predictionResponse.json();\r\n      setPredictionData(preData.predictionDataInJSON);\r\n    } catch (error) {\r\n      console.error(\"Error fetching stock data:\", error);\r\n      const errorMessage =\r\n        error.message || \"An error occurred while fetching the stock data.\";\r\n      notifyError(errorMessage);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-6\">\r\n      <h2 className=\"text-3xl font-semibold text-center mb-6 text-blue-700\">\r\n        Predict Stock Price for Next 30 Days\r\n      </h2>\r\n\r\n      <div className=\"flex justify-center mb-6\">\r\n        <button\r\n          className=\"text-white bg-gradient-to-r from-cyan-500 to-blue-500 hover:bg-gradient-to-bl focus:ring-4 focus:outline-none focus:ring-cyan-300 dark:focus:ring-cyan-800 font-medium rounded-lg text-lg px-6 py-3\"\r\n          onClick={() => predictStockPrice(startDate, endDate, stockSymbol)}\r\n        >\r\n          Click to Predict\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"text-center\">\r\n        {loading && <LoadingSpinner />}\r\n\r\n        {!loading &&\r\n          passedStockData.length > 0 &&\r\n          predictionData.length > 0 && (\r\n            <>\r\n              <h3 className=\"text-2xl font-semibold mb-4 text-blue-600\">\r\n                Prediction Data for {stockName} ({stockSymbol})\r\n              </h3>\r\n              <StockChart\r\n                stockData={passedStockData}\r\n                startDate={startDate}\r\n                endDate={endDate}\r\n                selectedStock={stockSymbol}\r\n                predictedData={predictionData}\r\n              />\r\n            </>\r\n          )}\r\n\r\n        {!loading &&\r\n          predictionData.length === 0 &&\r\n          passedStockData.length === 0 && (\r\n            <p className=\"text-lg text-red-600 font-semibold\">\r\n              No prediction data available. Please try again later.\r\n            </p>\r\n          )}\r\n      </div>\r\n\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PredictStockPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}