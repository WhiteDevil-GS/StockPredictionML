{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Downloads\\\\POME1\\\\POME1\\\\stockMarketPrediction\\\\frontend\\\\src\\\\components\\\\stockChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto';\nimport { formatDateString } from './DateInput';\n// import { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StockChart = ({\n  stockData = [],\n  startDate = [],\n  endDate = [],\n  selectedStock = [],\n  predictedData = []\n}) => {\n  _s();\n  const chartRef = useRef(null);\n  useEffect(() => {\n    let myChart = null;\n    if (chartRef.current && stockData) {\n      const ctx = chartRef.current.getContext('2d');\n\n      // Destroy existing chart if it exists\n      if (myChart) {\n        myChart.destroy();\n      }\n      const dates = stockData.map(item => formatDateString(item.date)).reverse(); // Reverse the order\n      // console.log(\"dates: \",dates);\n      const highs = stockData.map(item => item.high).reverse();\n      const closes = stockData.map(item => item.close).reverse();\n      const opens = stockData.map(item => item.open).reverse();\n      const predictedHigh = predictedData.map(item => {\n        if (typeof item[0] == \"number\") {\n          return item[0].toFixed(2);\n        }\n        return null;\n      });\n      const convertedPredictedHigh = predictedHigh.map(value => value !== undefined ? parseFloat(value) : undefined).filter(value => value !== undefined);\n      const datesPredicted = [];\n      for (let i = 1; i <= convertedPredictedHigh.length; i++) {\n        datesPredicted.push(i.toString());\n      }\n      myChart = new Chart(ctx, {\n        type: 'line',\n        data: {\n          labels: [...dates, ...datesPredicted],\n          datasets: [{\n            label: 'High',\n            data: [...highs, null],\n            borderColor: 'rgba(75, 192, 192, 1)',\n            backgroundColor: 'rgba(75, 192, 192, 0.2)'\n          }, ...(convertedPredictedHigh.length > 0 ? [{\n            label: 'Predicted',\n            data: [...Array(highs.length).fill(null), ...convertedPredictedHigh],\n            borderColor: 'rgba(0, 128, 0, 1)',\n            backgroundColor: 'rgba(0, 128, 0, 0.2)'\n          }] : []),\n          // {\n          //   label: 'Predicted',\n          //   data: [...Array(highs.length).fill(null) , ...predictedHigh],\n          //   borderColor: 'rgba(0, 128, 0, 1)',\n          //   backgroundColor: 'rgba(0, 128, 0, 0.2)',\n          // },\n\n          {\n            label: 'Close',\n            data: closes,\n            borderColor: 'rgba(255, 99, 132, 1)',\n            backgroundColor: 'rgba(255, 99, 132, 0.2)'\n          }, {\n            label: 'Open',\n            data: opens,\n            borderColor: 'rgba(255, 205, 86, 1)',\n            backgroundColor: 'rgba(255, 205, 86, 0.2)'\n          }]\n        }\n      });\n    }\n\n    // Cleanup the chart on component unmount\n    return () => {\n      if (myChart) {\n        myChart.destroy();\n      }\n    };\n  }, [stockData, predictedData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: chartRef,\n      className: \"py-10\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(StockChart, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = StockChart;\nexport default StockChart;\nvar _c;\n$RefreshReg$(_c, \"StockChart\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","formatDateString","jsxDEV","_jsxDEV","StockChart","stockData","startDate","endDate","selectedStock","predictedData","_s","chartRef","myChart","current","ctx","getContext","destroy","dates","map","item","date","reverse","highs","high","closes","close","opens","open","predictedHigh","toFixed","convertedPredictedHigh","value","undefined","parseFloat","filter","datesPredicted","i","length","push","toString","type","data","labels","datasets","label","borderColor","backgroundColor","Array","fill","children","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Downloads/POME1/POME1/stockMarketPrediction/frontend/src/components/stockChart.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport Chart from 'chart.js/auto';\r\nimport { formatDateString } from './DateInput';\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\nconst StockChart = ({ stockData=[], startDate=[], endDate=[], selectedStock=[], predictedData=[]}) => {\r\n  const chartRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    let myChart = null;\r\n\r\n    if (chartRef.current && stockData) {\r\n      const ctx = chartRef.current.getContext('2d');\r\n\r\n      // Destroy existing chart if it exists\r\n      if (myChart) {\r\n        myChart.destroy();\r\n      }\r\n\r\n      const dates = stockData.map((item) => formatDateString(item.date)).reverse(); // Reverse the order\r\n      // console.log(\"dates: \",dates);\r\n      const highs = stockData.map((item) => item.high).reverse();\r\n      const closes = stockData.map((item) => item.close).reverse();\r\n      const opens = stockData.map((item) => item.open).reverse();\r\n      const predictedHigh = predictedData.map((item) => {\r\n        if(typeof item[0]== \"number\"){\r\n          return item[0].toFixed(2);\r\n        }\r\n        return null;\r\n      });\r\n      \r\n      const convertedPredictedHigh = predictedHigh\r\n        .map(value => (value !== undefined ? parseFloat(value) : undefined))\r\n        .filter(value => value !== undefined);\r\n      const datesPredicted=[];\r\n      for (let i = 1; i <= convertedPredictedHigh.length; i++) {\r\n        datesPredicted.push(i.toString());\r\n      }\r\n\r\n      myChart = new Chart(ctx, {\r\n        type: 'line',\r\n        data: {\r\n          labels: [...dates , ...datesPredicted],\r\n          datasets: [\r\n            {\r\n              label: 'High',\r\n              data: [...highs , null],\r\n              borderColor: 'rgba(75, 192, 192, 1)',\r\n              backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n            },\r\n            ...(convertedPredictedHigh.length > 0\r\n              ? [\r\n                  {\r\n                    label: 'Predicted',\r\n                    data: [...Array(highs.length).fill(null), ...convertedPredictedHigh],\r\n                    borderColor: 'rgba(0, 128, 0, 1)',\r\n                    backgroundColor: 'rgba(0, 128, 0, 0.2)',\r\n                  },\r\n                ]\r\n              : []),\r\n            // {\r\n            //   label: 'Predicted',\r\n            //   data: [...Array(highs.length).fill(null) , ...predictedHigh],\r\n            //   borderColor: 'rgba(0, 128, 0, 1)',\r\n            //   backgroundColor: 'rgba(0, 128, 0, 0.2)',\r\n            // },\r\n            \r\n            {\r\n              label: 'Close',\r\n              data: closes,\r\n              borderColor: 'rgba(255, 99, 132, 1)',\r\n              backgroundColor: 'rgba(255, 99, 132, 0.2)',\r\n            },\r\n            {\r\n              label: 'Open',\r\n              data: opens,\r\n              borderColor: 'rgba(255, 205, 86, 1)',\r\n              backgroundColor: 'rgba(255, 205, 86, 0.2)',\r\n            },\r\n          ],\r\n        },\r\n      });\r\n    }\r\n\r\n    // Cleanup the chart on component unmount\r\n    return () => {\r\n      if (myChart) {\r\n        myChart.destroy();\r\n      }\r\n    };\r\n  }, [stockData,predictedData]);\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <canvas ref={chartRef} className='py-10' />\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nexport default StockChart;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}