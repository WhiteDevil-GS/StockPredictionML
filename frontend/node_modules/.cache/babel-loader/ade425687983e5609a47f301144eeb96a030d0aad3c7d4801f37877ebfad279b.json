{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91935\\\\Desktop\\\\POME1\\\\stockMarketPrediction\\\\frontend\\\\src\\\\components\\\\stock.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { SearchableSelect, GetDataButton } from \"./SearchBarSelect\";\nimport StockChart from \"./stockChart\";\nimport LoadingSpinner from \"./loadingAnimation\";\nimport { StartDate, EndDate, getAgoDate } from \"./DateInput\";\nimport StockDataTable from \"./stockDataTable\";\nimport stockOptions from \"./stockList\";\nimport PredictButton from \"./predictbutton\";\nimport { ToastContainer /*,toast*/ } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport notifyError from \"./Notifications\";\n\n// import { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StockDataApp = () => {\n  _s();\n  const [selectedStock, setSelectedStock] = useState(null);\n  const [startDate, setStartDate] = useState(getAgoDate(1));\n  const [endDate, setEndDate] = useState(getAgoDate(0));\n  const [stockData, setStockData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleSelect = selectedOption => {\n    setSelectedStock(selectedOption);\n  };\n  const handleGetData = async () => {\n    if (selectedStock) {\n      try {\n        setLoading(true); // Set loading to true before fetching data\n        console.log(\"kjhjk\");\n        // const response = await fetch(\"http://localhost:3001/getStockData\", {\n        const response = await fetch(\"http://localhost:3001/getStockData\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            stockSymbol: selectedStock.symbol + \".NS\",\n            startDate: startDate,\n            endDate: endDate\n          })\n        });\n        console.log(\"response\");\n        if (response.ok) {\n          const data = await response.json();\n          const stockSymbol = selectedStock.symbol + \".NS\";\n          const stockData = data.data[stockSymbol];\n          setStockData(stockData);\n          // console.log(stockData);\n        } else if (startDate > endDate) {\n          notifyError(\"Start date must be earlier than the end date.\");\n        } else {\n          // console.error(\"Failed to fetch stock data\");\n          notifyError(\"Failed to fetch stock data.\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching stock data:\", error);\n        notifyError(error);\n      } finally {\n        setLoading(false);\n      }\n    } else {\n      notifyError(\"Please select a stock first.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative top-0.5 left-0.5 py-4 px-2 mx-10\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center space-x-4 justify-center \",\n      children: [/*#__PURE__*/_jsxDEV(SearchableSelect, {\n        options: stockOptions,\n        onSelect: handleSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StartDate, {\n        value: startDate,\n        onChange: e => setStartDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EndDate, {\n        value: endDate,\n        onChange: e => setEndDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GetDataButton, {\n        onClick: handleGetData,\n        className: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 19\n    }, this), !loading && stockData && /*#__PURE__*/_jsxDEV(StockDataTable, {\n      stockData: stockData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 33\n    }, this), !loading && stockData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(StockChart, {\n        stockData: stockData,\n        startDate: startDate,\n        endDate: endDate,\n        selectedStock: selectedStock\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), !loading && stockData && /*#__PURE__*/_jsxDEV(PredictButton, {\n      startDate: startDate,\n      endDate: endDate,\n      selectedStock: selectedStock,\n      stockData: stockData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(StockDataApp, \"uHhFHtGBYseNwqI4f9tcnf4gW1o=\");\n_c = StockDataApp;\nexport default StockDataApp;\nvar _c;\n$RefreshReg$(_c, \"StockDataApp\");","map":{"version":3,"names":["React","useState","SearchableSelect","GetDataButton","StockChart","LoadingSpinner","StartDate","EndDate","getAgoDate","StockDataTable","stockOptions","PredictButton","ToastContainer","notifyError","jsxDEV","_jsxDEV","StockDataApp","_s","selectedStock","setSelectedStock","startDate","setStartDate","endDate","setEndDate","stockData","setStockData","loading","setLoading","handleSelect","selectedOption","handleGetData","console","log","response","fetch","method","headers","body","JSON","stringify","stockSymbol","symbol","ok","data","json","error","className","children","options","onSelect","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/91935/Desktop/POME1/stockMarketPrediction/frontend/src/components/stock.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { SearchableSelect, GetDataButton } from \"./SearchBarSelect\";\r\nimport StockChart from \"./stockChart\";\r\nimport LoadingSpinner from \"./loadingAnimation\";\r\nimport { StartDate, EndDate, getAgoDate } from \"./DateInput\";\r\nimport StockDataTable from \"./stockDataTable\";\r\nimport stockOptions from \"./stockList\";\r\nimport PredictButton from \"./predictbutton\";\r\nimport { ToastContainer /*,toast*/ } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport notifyError from \"./Notifications\";\r\n\r\n// import { Link } from 'react-router-dom';\r\n\r\nconst StockDataApp = () => {\r\n  const [selectedStock, setSelectedStock] = useState(null);\r\n  const [startDate, setStartDate] = useState(getAgoDate(1));\r\n  const [endDate, setEndDate] = useState(getAgoDate(0));\r\n  const [stockData, setStockData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSelect = (selectedOption) => {\r\n    setSelectedStock(selectedOption);\r\n  };\r\n\r\n  const handleGetData = async () => {\r\n    if (selectedStock) {\r\n      try {\r\n        setLoading(true); // Set loading to true before fetching data\r\n        console.log(\"kjhjk\");\r\n        // const response = await fetch(\"http://localhost:3001/getStockData\", {\r\n        const response = await fetch(\"http://localhost:3001/getStockData\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            stockSymbol: selectedStock.symbol + \".NS\",\r\n            startDate: startDate,\r\n            endDate: endDate,\r\n          }),\r\n        });\r\n        console.log(\"response\");\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          const stockSymbol = selectedStock.symbol + \".NS\";\r\n          const stockData = data.data[stockSymbol];\r\n          setStockData(stockData);\r\n          // console.log(stockData);\r\n        } else if (startDate > endDate) {\r\n          notifyError(\"Start date must be earlier than the end date.\");\r\n        } else {\r\n          // console.error(\"Failed to fetch stock data\");\r\n          notifyError(\"Failed to fetch stock data.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching stock data:\", error);\r\n        notifyError(error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      notifyError(\"Please select a stock first.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative top-0.5 left-0.5 py-4 px-2 mx-10\">\r\n      <div className=\"flex items-center space-x-4 justify-center \">\r\n        <SearchableSelect options={stockOptions} onSelect={handleSelect} />\r\n        <StartDate\r\n          value={startDate}\r\n          onChange={(e) => setStartDate(e.target.value)}\r\n        />\r\n        <EndDate value={endDate} onChange={(e) => setEndDate(e.target.value)} />\r\n        <GetDataButton onClick={handleGetData} className=\"\" />\r\n      </div>\r\n      {loading && <LoadingSpinner />}\r\n      {!loading && stockData && <StockDataTable stockData={stockData} />}\r\n      {/* {!loading && stockData && <StockChart stockData={stockData,startDate,endDate,selectedStock} />} */}\r\n      {!loading && stockData && (\r\n        <div className=\"\">\r\n          <StockChart\r\n            stockData={stockData}\r\n            startDate={startDate}\r\n            endDate={endDate}\r\n            selectedStock={selectedStock}\r\n          />\r\n        </div>\r\n      )}\r\n      {!loading && stockData && (\r\n        <PredictButton\r\n          startDate={startDate}\r\n          endDate={endDate}\r\n          selectedStock={selectedStock}\r\n          stockData={stockData}\r\n        />\r\n      )}\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StockDataApp;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}